/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "98.8";
    object      wallShearStress;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform List<vector> 8((0.00989041 0.00695128 0.416044) (0.00136111 0.000866984 0.180878) (0.241854 0.00347917 0.327914) (1.35594e-05 7.25795e-05 0.165743) (-0.00995875 -0.00113827 0.461602) (0.00194323 0.000563194 0.264093) (-0.245593 0.00301799 0.426475) (0.00132659 0.000119468 0.159649));
    }
    rightWall
    {
        type            calculated;
        value           nonuniform 0();
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary0to1
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to1throughleftInOut_periodic1
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary0to2
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to2throughleftSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
}


// ************************************************************************* //
