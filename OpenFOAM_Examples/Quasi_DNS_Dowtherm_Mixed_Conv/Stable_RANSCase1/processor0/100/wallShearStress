/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "100";
    object      wallShearStress;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform List<vector> 8((-0.00813231 0.0405736 0.318585) (0.00282918 -0.000364604 0.0483882) (-0.0541568 -0.00155056 0.277658) (0.00428915 7.75122e-05 0.199305) (0.00570839 0.00133945 0.279763) (-0.00303453 -0.000248954 0.205177) (0.0471779 -0.00140891 0.313622) (-0.00799923 1.87576e-05 0.177626));
    }
    rightWall
    {
        type            calculated;
        value           nonuniform 0();
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary0to1
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to1throughleftInOut_periodic1
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary0to2
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to2throughleftSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
}


// ************************************************************************* //
