/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "98.8";
    object      p_rgh;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   nonuniform List<scalar> 
634
(
100245
100378
100322
100386
100247
100380
100323
100388
100248
100381
100325
100390
100250
100382
100327
100392
100252
100383
100329
100393
100253
100384
100330
100395
100255
100386
100332
100396
100256
100387
100333
100397
100257
100387
100334
100398
100257
100388
100334
100399
100258
100388
100335
100399
100258
100389
100335
100400
100259
100389
100335
100400
100259
100389
100336
100400
100260
100389
100336
100400
100260
100389
100336
100400
100260
100389
100337
100400
100261
100389
100337
100400
100261
100389
100337
100400
100262
100389
100337
100400
100262
100389
100337
100400
100263
100389
100338
100400
100263
100389
100338
100400
100264
100389
100338
100400
100264
100389
100338
100400
100265
100389
100339
100399
100266
100389
100339
100399
100267
100388
100339
100399
100267
100388
100340
100398
100268
100388
100340
100398
100269
100388
100340
100398
100270
100387
100341
100398
100271
100387
100341
100397
100272
100387
100341
100397
100274
100386
100342
100397
100275
100386
100342
100396
100276
100385
100343
100396
100276
100385
100343
100395
100277
100385
100343
100395
100278
100384
100344
100394
100279
100384
100344
100393
100281
100384
100345
100393
100282
100384
100345
100392
100284
100383
100346
100392
100286
100383
100346
100392
100287
100382
100347
100392
100289
100381
100347
100391
100290
100381
100347
100390
100292
100380
100348
100390
100294
100380
100348
100389
100296
100379
100349
100388
100297
100378
100349
100388
100299
100378
100350
100387
100301
100377
100350
100386
100303
100376
100351
100385
100305
100376
100351
100385
100306
100375
100351
100384
100308
100374
100352
100383
100310
100374
100352
100382
100311
100373
100353
100381
100312
100372
100354
100380
100312
100371
100354
100380
100313
100371
100355
100379
100315
100370
100355
100378
100317
100369
100356
100377
100318
100368
100357
100376
100320
100367
100357
100375
100322
100367
100358
100374
100323
100366
100359
100373
100325
100365
100359
100372
100327
100364
100360
100372
100329
100364
100361
100371
100330
100364
100361
100370
100332
100363
100362
100369
100334
100363
100363
100368
100336
100363
100363
100367
100338
100363
100364
100367
100339
100362
100364
100366
100341
100361
100365
100365
100093
100120
100070
100108
100095
100122
100072
100111
100097
100124
100075
100113
100099
100126
100077
100115
100101
100128
100080
100117
100103
100129
100082
100119
100104
100131
100084
100121
100106
100132
100085
100123
100107
100133
100086
100124
100108
100134
100087
100125
100109
100134
100087
100125
100109
100135
100088
100126
100110
100135
100088
100126
100110
100135
100088
100126
100110
100136
100089
100127
100111
100136
100089
100127
100111
100136
100089
100127
100111
100136
100089
100127
100111
100136
100090
100127
100111
100136
100090
100127
100112
100136
100090
100127
100112
100136
100091
100127
100112
100136
100091
100127
100112
100136
100091
100127
100112
100135
100092
100127
100112
100135
100092
100127
100112
100135
100092
100127
100112
100135
100093
100127
100112
100135
100093
100127
100113
100135
100094
100126
100113
100134
100094
100126
100113
100134
100095
100126
100113
100134
100095
100126
100113
100133
100096
100126
100113
100133
100096
100126
100113
100133
100097
100125
100113
100132
100097
100125
100113
100132
100098
100125
100113
100132
100098
100125
100114
100131
100099
100124
100114
100131
100100
100124
100114
100130
100100
100124
100114
100130
100101
100123
100114
100130
100102
100123
100114
100129
100102
100123
100114
100129
100103
100122
100114
100128
100104
100122
100114
100128
100104
100122
100114
100127
100105
100121
100115
100127
100106
100121
100115
100126
100107
100121
100115
100126
100107
100120
100115
100125
100108
100120
100115
100124
100109
100120
100115
100124
100109
100119
100115
100123
100110
100119
100115
100123
100111
100119
100115
100122
100111
100118
100115
100122
100112
100118
100116
100121
100113
100117
100116
100121
100113
100117
100116
100120
100114
100117
100116
100120
100115
100116
100116
100119
100115
100116
100116
100119
100116
100116
100116
100119
100116
100116
100116
100118
100117
100115
100116
100118
100118
100115
100116
100117
100118
100115
100116
100117
100119
100115
100116
100117
100119
100115
100116
100117
100119
100114
100116
100116
100120
100114
100117
100116
100120
100114
100117
100116
100121
100114
100117
100116
100121
100114
100117
100116
100121
100114
100117
100115
100122
100114
100117
100115
100122
100114
100117
100115
)
;

boundaryField
{
    leftWall
    {
        type            fixedFluxPressure;
        gradient        nonuniform List<scalar> 8(-37115.3 -43935 -26829.2 -44086.8 -39045.2 -56639.1 -40499.6 -50359.2);
        value           nonuniform List<scalar> 8(100244 100092 100378 100119 100321 100068 100385 100107);
    }
    rightWall
    {
        type            fixedFluxPressure;
        gradient        nonuniform 0();
        value           nonuniform 0();
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary2to0
    {
        type            processor;
        value           nonuniform List<scalar> 
316
(
100452
100434
100438
100437
100453
100435
100439
100438
100453
100436
100440
100439
100454
100437
100441
100440
100455
100438
100442
100441
100455
100438
100443
100442
100456
100439
100444
100442
100457
100440
100444
100443
100457
100440
100445
100444
100458
100440
100445
100444
100458
100441
100445
100444
100458
100441
100446
100445
100458
100441
100446
100445
100458
100441
100446
100445
100458
100441
100446
100445
100459
100441
100446
100445
100459
100441
100446
100445
100459
100442
100446
100446
100459
100442
100446
100446
100459
100442
100446
100446
100459
100442
100446
100446
100459
100442
100446
100446
100459
100442
100447
100446
100459
100442
100447
100446
100459
100442
100447
100446
100459
100443
100447
100447
100459
100443
100447
100447
100459
100443
100447
100447
100459
100443
100447
100447
100459
100443
100447
100447
100459
100443
100447
100447
100458
100443
100447
100447
100458
100443
100447
100447
100458
100444
100447
100448
100458
100444
100447
100448
100458
100444
100447
100448
100458
100444
100447
100448
100458
100444
100447
100448
100458
100444
100447
100448
100458
100445
100447
100448
100458
100445
100447
100449
100458
100445
100447
100449
100457
100445
100447
100449
100457
100445
100446
100449
100457
100445
100446
100449
100457
100446
100446
100449
100457
100446
100446
100449
100457
100446
100446
100450
100457
100446
100447
100450
100457
100446
100447
100450
100456
100446
100447
100450
100456
100447
100447
100450
100456
100447
100447
100450
100456
100447
100447
100451
100456
100447
100447
100451
100456
100447
100447
100451
100456
100448
100447
100451
100456
100448
100447
100451
100456
100448
100447
100451
100456
100448
100447
100452
100455
100448
100447
100452
100455
100448
100447
100452
100455
100449
100447
100452
100455
100449
100447
100452
100455
100449
100447
100452
100455
100449
100447
100452
100455
100449
100447
100452
100455
100449
100448
100452
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100448
100453
100455
100450
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
)
;
    }
    procBoundary2to0throughleftSides_periodic1
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 
314
(
100000
100000
100001
100002
100002
100003
100003
100004
100004
100005
100005
100006
100006
100007
100007
100008
100009
100010
100011
100012
100013
100015
100016
100018
100019
100021
100023
100025
100027
100030
100032
100035
100037
100040
100043
100046
100049
100052
100055
100058
100062
100065
100069
100072
100076
100080
100082
100084
100086
100088
100092
100096
100100
100105
100109
100113
100118
100122
100126
100131
100135
100140
100144
100148
100153
100157
100161
100166
100169
100172
100174
100177
100181
100185
100189
100193
100197
100201
100205
100324
100324
100325
100325
100325
100325
100326
100326
100326
100326
100325
100325
100325
100325
100324
100324
100324
100323
100323
100322
100321
100320
100320
100319
100318
100317
100315
100314
100313
100311
100310
100308
100307
100305
100303
100302
100300
100298
100296
100294
100292
100289
100287
100285
100283
100282
100280
100279
100277
100275
100272
100270
100267
100265
100262
100260
100257
100255
100252
100250
100248
100245
100243
100240
100238
100236
100234
100232
100230
100227
100225
100224
100222
100220
100218
100216
100214
100213
100211
100146
100146
100146
100147
100147
100148
100148
100148
100149
100149
100149
100149
100150
100150
100150
100151
100151
100152
100152
100153
100154
100154
100155
100156
100157
100158
100159
100159
100161
100162
100163
100164
100166
100167
100168
100170
100171
100173
100174
100176
100177
100179
100180
100182
100183
100184
100186
100187
100188
100190
100191
100192
100193
100194
100195
100196
100197
100198
100199
100200
100200
100201
100202
100202
100203
100203
100204
100204
100205
100205
100205
100206
100206
100207
100207
100207
100207
100207
100311
100312
100312
100312
100313
100313
100313
100313
100313
100313
100313
100313
100313
100312
100312
100312
100311
100311
100310
100310
100309
100308
100307
100307
100306
100305
100303
100302
100301
100300
100299
100297
100296
100294
100293
100291
100289
100288
100286
100284
100283
100281
100279
100277
100275
100273
100271
100269
100267
100265
100263
100261
100259
100257
100255
100253
100251
100249
100246
100244
100242
100240
100237
100235
100233
100231
100228
100226
100224
100222
100220
100218
100218
100217
100216
100214
100212
100210
)
;
    }
    procBoundary2to1throughleftSides_periodic1
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 2(100208 100208);
    }
    procBoundary2to1throughrightSides_periodic1
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 2(100209 100210);
    }
    procBoundary2to3
    {
        type            processor;
        value           nonuniform List<scalar> 
11
(
100343
100361
100366
100365
100122
100114
100343
100361
100117
100122
100115
)
;
    }
    procBoundary2to3throughrightInOut_periodic1
    {
        type            processorCyclic;
        value           uniform 100114;
    }
}


// ************************************************************************* //
