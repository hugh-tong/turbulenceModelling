/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "98.8";
    object      p_rgh;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   nonuniform List<scalar> 
634
(
100208
100208
100209
100210
100208
100206
100213
100208
100209
100204
100217
100207
100210
100202
100221
100205
100211
100200
100225
100204
100212
100198
100229
100202
100212
100195
100234
100200
100213
100193
100238
100199
100214
100191
100242
100197
100216
100188
100247
100195
100217
100186
100251
100193
100218
100183
100256
100191
100219
100180
100260
100189
100220
100177
100265
100188
100222
100175
100269
100186
100223
100172
100274
100184
100225
100169
100278
100182
100226
100166
100283
100180
100228
100164
100287
100178
100229
100161
100292
100176
100231
100158
100296
100174
100232
100155
100301
100172
100234
100152
100305
100170
100236
100150
100309
100169
100237
100147
100313
100167
100239
100144
100317
100165
100241
100142
100321
100163
100242
100139
100325
100161
100244
100137
100329
100160
100246
100136
100333
100159
100247
100135
100336
100158
100249
100134
100338
100157
100251
100132
100341
100156
100252
100130
100343
100154
100254
100128
100346
100152
100256
100126
100349
100150
100257
100124
100352
100148
100259
100122
100355
100147
100260
100120
100357
100145
100262
100118
100360
100143
100263
100116
100362
100142
100265
100114
100364
100140
100266
100113
100366
100139
100267
100111
100368
100137
100268
100110
100370
100136
100269
100109
100372
100135
100270
100107
100373
100134
100271
100106
100374
100133
100272
100105
100376
100131
100273
100104
100377
100131
100274
100103
100378
100130
100275
100103
100379
100129
100276
100102
100380
100128
100276
100101
100381
100128
100277
100101
100382
100127
100278
100100
100383
100126
100278
100099
100383
100126
100279
100099
100384
100125
100279
100098
100385
100125
100280
100098
100385
100124
100280
100098
100386
100124
100280
100097
100386
100124
100281
100097
100386
100124
100281
100097
100387
100123
100281
100097
100387
100123
100282
100097
100388
100123
100282
100097
100388
100123
100282
100096
100388
100123
100282
100096
100389
100123
100282
100097
100389
100123
100283
100097
100389
100123
100283
100097
100390
100123
100283
100097
100390
100123
100284
100097
100390
100124
100284
100097
100391
100124
100285
100097
100391
100124
100285
100098
100391
100125
100286
100098
100391
100125
100286
100098
100392
100125
100287
100098
100455
100451
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
100455
100451
100449
100453
100454
100451
100449
100453
100454
100451
100449
100453
100454
100451
100449
100453
100454
100451
100449
100453
100454
100451
100449
100453
100454
100451
100449
100453
100453
100451
100449
100453
100453
100451
100448
100453
100453
100451
100448
100453
100453
100451
100448
100453
100452
100451
100448
100453
100452
100451
100448
100453
100452
100451
100448
100453
100452
100451
100448
100453
100451
100451
100448
100453
100451
100451
100448
100454
100451
100451
100448
100454
100450
100451
100447
100454
100450
100451
100447
100454
100450
100452
100447
100454
100449
100452
100447
100454
100449
100452
100447
100454
100449
100452
100447
100454
100448
100452
100447
100454
100448
100452
100446
100454
100448
100452
100446
100454
100447
100452
100446
100454
100447
100452
100446
100455
100447
100452
100446
100455
100446
100453
100446
100455
100446
100453
100445
100455
100446
100453
100445
100455
100446
100453
100445
100455
100445
100453
100445
100455
100445
100453
100445
100455
100445
100453
100445
100455
100445
100453
100445
100455
100445
100453
100445
100455
100444
100454
100445
100456
100444
100454
100444
100456
100444
100454
100444
100456
100444
100454
100444
100456
100444
100454
100444
100456
100443
100454
100444
100456
100443
100454
100444
100456
100443
100454
100444
100456
100443
100454
100444
100456
100443
100454
100444
100456
100443
100454
100444
100456
100443
100455
100444
100456
100443
100455
100444
100456
100443
100455
100444
100456
100443
100455
100444
100456
100443
100455
100444
100457
100443
100455
100444
100457
100443
100455
100444
100457
100443
100455
100444
100457
100443
100455
100444
100457
100443
100455
100444
100457
100443
100456
100444
100457
100443
100456
100445
100458
100444
100456
100445
100458
100444
100456
100445
100458
100445
100457
100446
100459
100446
100458
100446
100460
100446
100458
100447
100461
100447
100459
100448
100461
100448
100460
100449
100462
100449
100461
100450
100463
100450
100462
100451
100464
100451
100463
100451
100465
100452
100464
100452
100466
100453
100465
100453
100466
)
;

boundaryField
{
    leftWall
    {
        type            fixedFluxPressure;
        gradient        nonuniform 0();
        value           nonuniform 0();
    }
    rightWall
    {
        type            fixedFluxPressure;
        gradient        nonuniform List<scalar> 8(4725.32 19661.8 7476.77 20964.3 9362.17 18791.6 4659.92 17863.2);
        value           nonuniform List<scalar> 8(100392 100453 100125 100466 100287 100453 100098 100467);
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary1to0
    {
        type            processor;
        value           nonuniform List<scalar> 
11
(
100207
100210
100205
100211
100211
100449
100453
100455
100451
100449
100453
)
;
    }
    procBoundary1to0throughleftInOut_periodic0
    {
        type            processorCyclic;
        value           uniform 100205;
    }
    procBoundary1to2throughleftSides_periodic0
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 2(100122 100114);
    }
    procBoundary1to2throughrightSides_periodic0
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 2(100117 100115);
    }
    procBoundary1to3
    {
        type            processor;
        value           nonuniform List<scalar> 
316
(
100343
100361
100366
100365
100344
100360
100366
100364
100346
100359
100367
100364
100348
100358
100367
100363
100350
100357
100368
100362
100351
100356
100369
100361
100353
100355
100369
100360
100355
100354
100370
100358
100357
100352
100371
100357
100359
100351
100372
100355
100361
100350
100373
100354
100364
100349
100373
100352
100366
100347
100374
100351
100368
100346
100375
100349
100370
100345
100375
100347
100372
100344
100375
100346
100373
100342
100376
100344
100373
100341
100377
100343
100375
100340
100378
100342
100377
100338
100379
100341
100379
100337
100380
100340
100382
100336
100382
100339
100385
100334
100383
100338
100388
100333
100384
100337
100391
100331
100386
100335
100394
100330
100387
100333
100397
100328
100388
100331
100400
100327
100390
100329
100402
100325
100391
100327
100404
100324
100392
100325
100405
100323
100394
100324
100407
100323
100395
100323
100409
100322
100396
100321
100412
100321
100398
100320
100415
100319
100399
100318
100417
100318
100400
100316
100420
100316
100402
100314
100422
100314
100403
100313
100424
100313
100404
100311
100426
100311
100405
100309
100428
100310
100406
100308
100429
100309
100408
100307
100431
100307
100409
100305
100433
100306
100410
100304
100435
100305
100411
100303
100437
100303
100412
100301
100438
100302
100413
100300
100440
100301
100414
100299
100442
100300
100415
100298
100443
100299
100416
100297
100444
100298
100416
100296
100445
100297
100417
100295
100447
100296
100418
100295
100448
100295
100419
100294
100449
100295
100419
100293
100450
100294
100420
100293
100450
100293
100420
100292
100451
100293
100421
100292
100452
100292
100421
100291
100453
100292
100422
100291
100453
100292
100422
100291
100454
100291
100423
100291
100454
100291
100423
100291
100455
100291
100423
100290
100455
100291
100424
100290
100456
100291
100424
100291
100456
100291
100424
100291
100457
100291
100425
100291
100458
100291
100425
100292
100458
100292
100426
100293
100460
100293
100427
100294
100461
100294
100428
100295
100462
100296
100430
100297
100464
100298
100432
100298
100465
100300
100435
100300
100467
100302
100437
100301
100468
100303
100440
100302
100469
100305
100442
100304
100471
100307
100444
100305
)
;
    }
    procBoundary1to3throughrightSides_periodic0
    {
        type            processorCyclic;
        value           nonuniform List<scalar> 
314
(
100117
100117
100117
100117
100117
100117
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100118
100119
100119
100119
100119
100119
100119
100120
100120
100120
100120
100121
100122
100122
100124
100125
100127
100129
100131
100133
100135
100137
100139
100141
100143
100115
100115
100115
100115
100115
100115
100115
100115
100115
100115
100115
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100113
100114
100114
100114
100114
100114
100114
100114
100115
100115
100115
100116
100116
100117
100118
100120
100122
100124
100126
100128
100131
100133
100135
100137
100122
100123
100123
100123
100124
100124
100124
100125
100125
100125
100126
100126
100126
100127
100127
100128
100128
100128
100129
100129
100129
100130
100130
100130
100131
100131
100131
100132
100132
100132
100133
100133
100133
100133
100134
100134
100134
100135
100135
100135
100135
100135
100136
100136
100136
100136
100136
100137
100137
100137
100137
100137
100138
100138
100138
100138
100138
100138
100139
100139
100139
100139
100139
100140
100140
100140
100141
100141
100142
100143
100144
100146
100148
100150
100152
100154
100156
100159
100161
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100114
100115
100115
100115
100115
100115
100115
100115
100115
100115
100116
100116
100116
100116
100116
100117
100117
100118
100118
100119
100120
100121
100123
100125
100126
100128
100130
100132
100134
100136
100137
)
;
    }
}


// ************************************************************************* //
