/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "98.8";
    object      wallShearStress;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform 0();
    }
    rightWall
    {
        type            calculated;
        value           nonuniform List<vector> 8((0.0207496 0.000420036 0.204715) (0.00738875 -0.000538675 0.315564) (-0.118739 -0.00028325 0.239249) (0.00882251 -0.000310944 0.390813) (-0.0280617 0.00103748 0.273822) (-0.00776993 -0.000209593 0.447904) (0.0939091 -0.000382816 0.158492) (-0.00845052 -0.000272436 0.355735));
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary1to0
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary1to0throughleftInOut_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary1to2throughleftSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary1to2throughrightSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary1to3
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary1to3throughrightSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
}


// ************************************************************************* //
