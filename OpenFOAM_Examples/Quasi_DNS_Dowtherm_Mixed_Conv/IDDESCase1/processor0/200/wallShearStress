/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "200";
    object      wallShearStress;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];


internalField   uniform (0 0 0);

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform List<vector> 
128
(
(-0.00011284 0.0466576 0.26589)
(-0.0001811 -0.00421991 -0.312105)
(-9.98437e-05 0.00201141 -0.252075)
(-8.75521e-05 -0.000210809 -0.371699)
(-4.59645e-05 6.43225e-05 -0.283233)
(-2.41063e-05 4.30839e-05 -0.367796)
(-3.37022e-05 -5.40849e-05 -0.279315)
(-2.54865e-05 5.35333e-05 -0.370482)
(0.0678352 -0.000783432 0.137822)
(0.0409388 0.00229318 -0.226093)
(-0.0111902 -0.000395198 -0.260993)
(-0.000963746 7.80956e-05 -0.317402)
(0.00464435 -2.64534e-05 -0.304518)
(-0.00549025 1.00872e-05 -0.331499)
(0.00747854 -1.29685e-05 -0.314938)
(-0.00644774 9.51008e-06 -0.334671)
(-0.019305 0.000604307 0.108837)
(-0.0107858 0.00091674 -0.191258)
(-0.00088569 8.56304e-05 -0.287759)
(-0.000918533 7.72333e-05 -0.296295)
(0.00260728 3.24834e-05 -0.329953)
(-0.0014446 -6.3788e-06 -0.309512)
(0.00295676 2.60866e-05 -0.34284)
(-0.00176666 -1.49316e-05 -0.310499)
(0.00472271 0.000526163 0.193655)
(-0.00915861 0.000670399 -0.189829)
(-0.000481436 0.000195238 -0.275572)
(-0.00118911 7.36448e-05 -0.301668)
(0.000820419 3.62967e-05 -0.324169)
(-0.000576801 8.34512e-06 -0.318563)
(0.00102676 1.29112e-05 -0.334154)
(-0.000648296 3.72922e-06 -0.321159)
(-0.00838426 0.000547199 0.191758)
(-0.00526393 0.00073541 -0.193804)
(-0.000248173 0.000170055 -0.271223)
(-0.000480912 6.34172e-05 -0.304227)
(0.000541743 2.53437e-05 -0.319259)
(-5.99813e-05 6.42298e-06 -0.320689)
(0.000452894 4.57268e-06 -0.329696)
(-0.000130692 5.8983e-06 -0.32336)
(-0.0044489 0.000530297 0.209488)
(-0.00517013 0.000749534 -0.19516)
(-0.000414292 0.000185033 -0.267231)
(-0.000417961 7.23612e-05 -0.308053)
(0.000225654 2.81009e-05 -0.318318)
(0.000113319 1.24712e-05 -0.324857)
(0.000214065 2.38832e-06 -0.329313)
(3.18941e-05 1.01333e-05 -0.326496)
(-0.00448103 0.000539682 0.212863)
(-0.0028163 0.000754866 -0.195916)
(-0.000118537 0.000189348 -0.265222)
(-0.000265209 7.03191e-05 -0.309224)
(7.50685e-05 2.66148e-05 -0.316758)
(7.83892e-05 1.20126e-05 -0.325961)
(2.65146e-05 1.42777e-07 -0.328204)
(4.94874e-05 9.98846e-06 -0.32733)
(-0.00185641 0.000533053 0.217166)
(-0.00166044 0.000747747 -0.196387)
(-9.44184e-05 0.000191448 -0.263602)
(-8.48294e-05 7.42065e-05 -0.310094)
(6.6044e-05 2.78408e-05 -0.316162)
(8.47908e-05 1.49417e-05 -0.326911)
(3.07784e-05 -3.22288e-08 -0.327826)
(4.10843e-05 1.18619e-05 -0.328041)
(6.16889e-05 0.000539918 0.21683)
(9.93423e-05 0.000749419 -0.196508)
(4.8284e-05 0.000190602 -0.263612)
(5.74862e-05 7.14606e-05 -0.31022)
(3.89318e-05 2.68297e-05 -0.315929)
(2.59377e-05 1.33938e-05 -0.326898)
(1.84388e-05 -5.73149e-07 -0.327602)
(1.53092e-05 1.06707e-05 -0.327982)
(0.00199512 0.000532967 0.216955)
(0.00186087 0.000747435 -0.196498)
(0.000190474 0.00019149 -0.26373)
(0.000193123 7.45058e-05 -0.310189)
(5.96796e-06 2.86129e-05 -0.316255)
(-3.55525e-05 1.54276e-05 -0.326988)
(3.68921e-06 3.73098e-07 -0.327893)
(-1.08758e-05 1.21338e-05 -0.328118)
(0.00459277 0.000539823 0.212354)
(0.00298738 0.00075457 -0.196162)
(0.000195062 0.000189505 -0.26547)
(0.000339966 7.13412e-05 -0.309389)
(-3.26616e-05 2.7925e-05 -0.316916)
(-5.25867e-05 1.28272e-05 -0.326097)
(-6.14358e-06 7.95662e-07 -0.328308)
(-3.03362e-05 1.02807e-05 -0.32748)
(0.00453121 0.000530507 0.208795)
(0.00525832 0.000749415 -0.19549)
(0.000456639 0.000185718 -0.267567)
(0.000451662 7.37657e-05 -0.308273)
(-0.000215929 2.93782e-05 -0.318529)
(-0.000117413 1.36072e-05 -0.325036)
(-0.000207548 3.2722e-06 -0.329458)
(-2.80897e-05 1.086e-05 -0.326692)
(0.0084028 0.000547941 0.190895)
(0.00527744 0.000735359 -0.194163)
(0.000235231 0.000171153 -0.271521)
(0.000454616 6.53197e-05 -0.304416)
(-0.000568152 2.65129e-05 -0.319437)
(2.73413e-05 7.03233e-06 -0.320845)
(-0.000466835 5.21392e-06 -0.329831)
(0.000117054 6.50198e-06 -0.323541)
(-0.00480263 0.000527074 0.192929)
(0.00904458 0.000671036 -0.190147)
(0.000443825 0.000195871 -0.275816)
(0.00113796 7.40046e-05 -0.301841)
(-0.000855901 3.70002e-05 -0.324331)
(0.000540185 7.99026e-06 -0.31872)
(-0.00105345 1.31423e-05 -0.334297)
(0.000623447 4.04451e-06 -0.321344)
(0.0191713 0.000604465 0.108377)
(0.0106419 0.00091692 -0.191524)
(0.00081674 8.81222e-05 -0.288037)
(0.000853919 7.78938e-05 -0.296496)
(-0.00267063 3.33904e-05 -0.330179)
(0.00141068 -6.90111e-06 -0.309673)
(-0.00299973 2.62306e-05 -0.343043)
(0.00173276 -1.48246e-05 -0.310664)
(-0.0678851 -0.000783914 0.136964)
(-0.0411393 0.00229342 -0.22628)
(0.0110682 -0.000392129 -0.261368)
(0.000856248 7.98194e-05 -0.317518)
(-0.00471431 -2.46162e-05 -0.3048)
(0.00546518 1.00571e-05 -0.331568)
(-0.00752198 -1.23487e-05 -0.315207)
(0.00641493 9.65877e-06 -0.334752)
)
;
    }
    rightWall
    {
        type            calculated;
        value           nonuniform 0();
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
    procBoundary0to1
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to1throughleftInOut_periodic1
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
    procBoundary0to2
    {
        type            processor;
        value           uniform (0 0 0);
    }
    procBoundary0to2throughleftSides_periodic0
    {
        type            processorCyclic;
        value           uniform (0 0 0);
    }
}


// ************************************************************************* //
