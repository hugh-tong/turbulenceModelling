/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "199.6";
    object      heatTransferCoeff(T);
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 0 -3 -1 0 0 0];


internalField   uniform 0;

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
256
(
-27.7985
-489.028
-343.172
-353.716
-273.898
-322.619
-247.687
-315.806
-235.644
-312.312
-233.331
-302.682
-239.928
-270.597
-228.897
-54.4914
-396.006
-385.258
-357.103
-312.772
-315.25
-284.202
-300.067
-268.384
-296.878
-256.478
-300.249
-243.216
-306.262
-220.504
-298.039
-122.078
-314.857
-289.544
-353.067
-277.41
-325.293
-253.306
-314.839
-236.914
-313.147
-223.734
-314.895
-211.456
-314.299
-198.584
-291.541
-122.388
-280.678
-313.111
-351.574
-289.171
-320.336
-266.855
-306.777
-252.765
-303.526
-240.827
-303.613
-227.5
-301.55
-211.244
-275.819
-124.982
-284.848
-324.653
-350.578
-293.028
-317.492
-269.552
-303.806
-255.155
-300.882
-242.944
-301.763
-229.245
-301.015
-211.826
-277.291
-124.283
-283.306
-332.088
-353.05
-298.815
-319.612
-274.43
-305.589
-258.684
-302.473
-244.695
-303.468
-229.007
-302.177
-210.474
-275.878
-123.397
-283.805
-336.009
-352.958
-300.304
-319.016
-275.596
-305.124
-259.6
-302.159
-245.277
-303.319
-229.25
-302.032
-210.522
-275.571
-123.219
-284.223
-338.935
-353.97
-302.005
-319.593
-276.859
-305.507
-260.493
-302.451
-245.719
-303.598
-229.178
-302.091
-210.045
-275.008
-122.616
-284.435
-339.359
-353.825
-301.983
-319.315
-276.773
-305.266
-260.416
-302.291
-245.694
-303.508
-229.242
-302.092
-210.209
-275.165
-122.786
-284.084
-338.978
-353.996
-302.081
-319.609
-276.912
-305.517
-260.557
-302.485
-245.806
-303.657
-229.28
-302.177
-210.153
-275.11
-122.675
-283.618
-336.091
-352.984
-300.406
-319.024
-275.675
-305.123
-259.717
-302.191
-245.459
-303.388
-229.482
-302.163
-210.744
-275.779
-123.322
-283.107
-332.212
-353.096
-298.936
-319.622
-274.531
-305.6
-258.833
-302.523
-244.921
-303.569
-229.292
-302.358
-210.753
-276.15
-123.534
-284.652
-324.747
-350.559
-293.108
-317.453
-269.637
-303.805
-255.306
-300.907
-243.178
-301.824
-229.559
-301.152
-212.167
-277.547
-124.438
-280.511
-313.202
-351.498
-289.222
-320.3
-266.946
-306.81
-252.932
-303.577
-241.053
-303.672
-227.784
-301.672
-211.551
-276.041
-125.117
-314.738
-289.606
-353.006
-277.456
-325.289
-253.373
-314.904
-237.028
-313.238
-223.867
-314.999
-211.606
-314.438
-198.76
-291.715
-122.518
-396.102
-385.164
-357.15
-312.739
-315.322
-284.15
-300.232
-268.381
-297.085
-256.529
-300.46
-243.343
-306.452
-220.686
-298.239
-122.114
)
;
    }
    rightWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
256
(
-355.437
-264.683
-253.46
-240.324
-256.175
-250.814
-267.718
-257.978
-275.345
-260.35
-281.346
-261.17
-288.896
-270.063
-301.552
-391.278
-347.909
-265.212
-248.805
-241.932
-251.874
-253.126
-263.32
-261.019
-270.524
-264.088
-275.882
-265.603
-282.559
-274.788
-292.052
-392.279
-348.764
-266.445
-245.022
-243.295
-247.697
-254.635
-259.297
-262.617
-266.698
-265.637
-272.339
-267.086
-279.263
-276.636
-288.478
-394.649
-346.447
-266.334
-244.378
-243.767
-247.489
-255.323
-259.285
-263.386
-266.672
-266.424
-272.167
-267.927
-278.698
-277.317
-286.725
-393.189
-346.7
-266.288
-243.487
-243.536
-246.314
-255.232
-258.091
-263.537
-265.47
-266.8
-270.933
-268.631
-277.32
-278.617
-285.028
-394.922
-346.703
-266.384
-244.274
-243.813
-247.208
-255.39
-258.862
-263.475
-266.128
-266.575
-271.537
-268.238
-277.918
-277.922
-285.788
-393.484
-347.205
-266.433
-245.047
-243.876
-248.03
-255.405
-259.66
-263.381
-266.906
-266.389
-272.315
-267.956
-278.729
-277.629
-286.84
-393.706
-347.239
-266.008
-245.023
-243.271
-248.002
-254.877
-259.786
-262.954
-267.158
-266.033
-272.661
-267.628
-279.13
-277.294
-287.274
-393.314
-347.348
-266.108
-245.198
-243.346
-248.132
-254.899
-259.839
-262.953
-267.153
-266.05
-272.606
-267.709
-279.033
-277.498
-287.187
-393.701
-347.227
-266.028
-245.055
-243.309
-248.03
-254.892
-259.793
-262.956
-267.163
-266.038
-272.673
-267.64
-279.148
-277.308
-287.29
-393.302
-347.198
-266.472
-245.103
-243.942
-248.075
-255.433
-259.668
-263.392
-266.911
-266.411
-272.336
-267.997
-278.766
-277.68
-286.876
-393.692
-346.704
-266.447
-244.359
-243.905
-247.272
-255.437
-258.884
-263.508
-266.15
-266.626
-271.582
-268.315
-277.981
-278.009
-285.849
-393.486
-346.71
-266.371
-243.58
-243.647
-246.383
-255.29
-258.13
-263.594
-265.516
-266.878
-270.999
-268.735
-277.401
-278.735
-285.101
-394.94
-346.44
-266.419
-244.43
-243.873
-247.519
-255.379
-259.3
-263.456
-266.702
-266.518
-272.209
-268.045
-278.747
-277.457
-286.753
-393.227
-348.743
-266.528
-245.027
-243.397
-247.683
-254.705
-259.276
-262.705
-266.687
-265.747
-272.329
-267.212
-279.247
-276.779
-288.433
-394.702
-347.868
-265.261
-248.761
-241.989
-251.816
-253.171
-263.26
-261.081
-270.469
-264.167
-275.822
-265.694
-282.491
-274.889
-291.964
-392.325
)
;
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
}


// ************************************************************************* //
