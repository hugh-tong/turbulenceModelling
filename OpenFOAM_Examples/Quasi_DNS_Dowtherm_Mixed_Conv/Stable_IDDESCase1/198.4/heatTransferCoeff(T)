/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "198.4";
    object      heatTransferCoeff(T);
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 0 -3 -1 0 0 0];


internalField   uniform 0;

boundaryField
{
    leftWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
256
(
-24.3888
-480.326
-336.835
-345.772
-269.443
-322.633
-247.881
-319.759
-236.737
-316.68
-233.394
-305.907
-239.742
-271.573
-228.946
-54.4621
-387.173
-385.971
-357.503
-313.298
-314.9
-283.92
-299.468
-268.984
-296.82
-257.315
-300.511
-243.584
-307.001
-220.236
-298.479
-122.73
-312.567
-291.314
-356.376
-280.131
-327.383
-253.35
-314.663
-235.208
-312.879
-222.116
-315.063
-210.324
-314.455
-198.38
-290.968
-123.066
-280.974
-313.951
-351.717
-288.905
-320.426
-266.635
-306.988
-252.477
-303.489
-240.547
-303.349
-227.545
-301.31
-211.393
-275.994
-124.98
-284.644
-324.959
-350.747
-293.173
-317.539
-269.445
-303.738
-254.964
-300.864
-242.743
-301.865
-229.145
-301.158
-211.925
-277.36
-124.374
-283.326
-332.178
-353.04
-298.794
-319.612
-274.421
-305.607
-258.646
-302.478
-244.634
-303.495
-229.033
-302.226
-210.573
-275.927
-123.434
-283.798
-336.061
-352.996
-300.363
-319.021
-275.607
-305.119
-259.594
-302.175
-245.248
-303.407
-229.228
-302.164
-210.539
-275.609
-123.258
-284.27
-338.957
-353.964
-301.995
-319.584
-276.89
-305.536
-260.52
-302.485
-245.72
-303.658
-229.204
-302.17
-210.089
-275.048
-122.645
-284.459
-339.383
-353.848
-302.015
-319.308
-276.805
-305.277
-260.447
-302.318
-245.701
-303.577
-229.253
-302.188
-210.225
-275.217
-122.813
-284.132
-338.989
-353.981
-302.061
-319.594
-276.939
-305.546
-260.583
-302.519
-245.807
-303.715
-229.304
-302.257
-210.193
-275.152
-122.706
-283.61
-336.145
-353.014
-300.458
-319.025
-275.689
-305.119
-259.712
-302.209
-245.427
-303.478
-229.46
-302.29
-210.769
-275.811
-123.359
-283.128
-332.306
-353.088
-298.916
-319.624
-274.524
-305.621
-258.797
-302.53
-244.863
-303.596
-229.32
-302.404
-210.856
-276.2
-123.572
-284.443
-325.05
-350.725
-293.253
-317.5
-269.533
-303.738
-255.116
-300.892
-242.979
-301.926
-229.46
-301.292
-212.27
-277.614
-124.531
-280.803
-314.034
-351.64
-288.958
-320.389
-266.728
-307.021
-252.646
-303.54
-240.776
-303.41
-227.828
-301.432
-211.699
-276.214
-125.117
-312.443
-291.369
-356.324
-280.176
-327.386
-253.421
-314.736
-235.325
-312.971
-222.249
-315.164
-210.475
-314.589
-198.555
-291.138
-123.196
-387.273
-385.887
-357.568
-313.26
-314.98
-283.872
-299.639
-268.98
-297.028
-257.364
-300.717
-243.707
-307.187
-220.412
-298.676
-122.769
)
;
    }
    rightWall
    {
        type            calculated;
        value           nonuniform List<scalar> 
256
(
-355.214
-265.139
-253.506
-240.095
-255.834
-250.625
-267.588
-257.888
-275.349
-260.32
-281.435
-261.172
-289.009
-270.021
-301.707
-391.017
-347.963
-265.193
-248.715
-241.834
-251.739
-253.047
-263.244
-260.978
-270.515
-264.069
-275.926
-265.614
-282.599
-274.816
-292.02
-392.29
-348.663
-266.559
-244.993
-243.129
-247.537
-254.548
-259.226
-262.585
-266.654
-265.632
-272.315
-267.112
-279.233
-276.625
-288.489
-394.435
-346.447
-266.292
-244.331
-243.703
-247.415
-255.259
-259.213
-263.33
-266.607
-266.383
-272.132
-267.914
-278.667
-277.317
-286.664
-393.19
-346.704
-266.278
-243.448
-243.481
-246.282
-255.204
-258.051
-263.496
-265.406
-266.766
-270.879
-268.62
-277.263
-278.602
-284.994
-394.774
-346.661
-266.361
-244.262
-243.756
-247.134
-255.316
-258.795
-263.413
-266.071
-266.532
-271.508
-268.215
-277.898
-277.903
-285.767
-393.449
-347.169
-266.412
-245.016
-243.815
-247.966
-255.337
-259.596
-263.314
-266.838
-266.345
-272.267
-267.948
-278.68
-277.637
-286.792
-393.65
-347.209
-265.99
-244.995
-243.218
-247.937
-254.81
-259.722
-262.889
-267.099
-265.99
-272.626
-267.611
-279.105
-277.288
-287.247
-393.291
-347.309
-266.085
-245.168
-243.303
-248.08
-254.841
-259.778
-262.885
-267.089
-266.003
-272.565
-267.692
-279
-277.494
-287.153
-393.655
-347.197
-266.009
-245.026
-243.256
-247.966
-254.824
-259.729
-262.891
-267.104
-265.993
-272.636
-267.622
-279.121
-277.302
-287.262
-393.279
-347.162
-266.45
-245.071
-243.88
-248.013
-255.368
-259.605
-263.325
-266.842
-266.366
-272.287
-267.987
-278.716
-277.685
-286.828
-393.635
-346.662
-266.423
-244.346
-243.849
-247.199
-255.366
-258.818
-263.447
-266.092
-266.581
-271.55
-268.289
-277.959
-277.989
-285.826
-393.45
-346.714
-266.359
-243.541
-243.593
-246.354
-255.265
-258.092
-263.553
-265.452
-266.843
-270.943
-268.722
-277.341
-278.719
-285.067
-394.791
-346.439
-266.375
-244.385
-243.812
-247.449
-255.318
-259.229
-263.401
-266.636
-266.476
-272.172
-268.03
-278.714
-277.457
-286.691
-393.226
-348.641
-266.641
-244.999
-243.233
-247.526
-254.62
-259.205
-262.675
-266.642
-265.74
-272.303
-267.237
-279.216
-276.767
-288.445
-394.486
-347.921
-265.241
-248.671
-241.893
-251.683
-253.093
-263.184
-261.041
-270.459
-264.147
-275.864
-265.704
-282.531
-274.916
-291.931
-392.334
)
;
    }
    leftSides_periodic0
    {
        type            cyclic;
    }
    leftSides_periodic1
    {
        type            cyclic;
    }
    rightSides_periodic0
    {
        type            cyclic;
    }
    rightSides_periodic1
    {
        type            cyclic;
    }
    leftInOut_periodic0
    {
        type            cyclic;
    }
    leftInOut_periodic1
    {
        type            cyclic;
    }
    rightInOut_periodic0
    {
        type            cyclic;
    }
    rightInOut_periodic1
    {
        type            cyclic;
    }
}


// ************************************************************************* //
